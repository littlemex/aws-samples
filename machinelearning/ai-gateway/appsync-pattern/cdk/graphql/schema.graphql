type Query {
  # Required empty type
  _empty: String
}

type Mutation {
  startInference(input: InferenceInput!): InferenceStatus
    @aws_lambda
  updateInferenceStatus(input: UpdateStatusInput!): InferenceStatus!
}

type Subscription {
  onInferenceStatusChange(jobId: ID!): InferenceStatus
    @aws_subscribe(mutations: ["updateInferenceStatus"])
}

input InferenceInput {
  jobId: ID!
  prompt: String!
  model: String
  processTime: Int
}

input UpdateStatusInput {
  jobId: ID!
  status: Status!
  result: String
  error: String
}

type InferenceStatus {
  jobId: ID
  status: Status
  startTime: String
  endTime: String
  result: String
  error: String
}

enum Status {
  PENDING
  PROCESSING
  COMPLETED
  FAILED
}